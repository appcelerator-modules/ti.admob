---
name: Modules.Admob
extends: Titanium.Module
summary: Allows for the display of AdMob ads in Titanium applications.
description: |
    Allows for the display of AdMob in Titanium Android applications.

    Please note that if your androidManifest has screen support set to: android:anyDensity="false", any banner ads will 
    display too small on high density devices.
    It is not clear at this point if this is a bug with AdMob or Titanium.
    In any event, you will either need to NOT set your screen support -- or set android:anyDensity="true" and adjust your app layout accordingly

    ## Getting Started

    View the [Using Titanium Modules](http://docs.appcelerator.com/platform/latest/#!/guide/Using_Titanium_Modules) document 
    for instructions on getting started with using this module in your application.

    ## Android

    Please note that if your androidManifest has screen support set to: android:anyDensity="false", any banner ads will 
    display too small on high density devices.
    It is not clear at this point if this is a bug with AdMob or Titanium.
    In any event, you will either need to NOT set your screen support -- or set android:anyDensity="true" and adjust your app layout accordingly

    In order to use the module you would need to add the following tags in your tiapp.xml

      <android 
          xmlns:android="http://schemas.android.com/apk/res/android">
          <manifest>
            <application>
              <meta-data
                  android:name="com.google.android.gms.ads.APPLICATION_ID"
                  android:value="your-admob-application-id"/>
            </application>
          </manifest>
        </android>

    ### Requirements

    - [x] Titanium SDK 7.0.0+
    - [x] [Ti.PlayServices](https://github.com/appcelerator-modules/ti.playservices) module

    ## iOS

    The Google AdMob Ads SDK has the following requirements:
    
    * An AdMob site ID.
    * Xcode 6.4 or later.
    * Runtime of iOS 7.1 or later.
    * If using module 2.5.0+, add following key in tiapp.xml, inside ios plist section.   
        <key>GADIsAdManagerApp</key>
        <true/>
    * If using Xcode 12.0+, set minimum ios version 11.0+ using following key in tiapp.xml, inside ios section to run app on simulators.
      If app supports iOS < 11.0, be sure to remove it while building for device or app distribution. 
        <min-ios-ver>11.0<</min-ios-ver>

    Starting in iOS 14, IDFA will be unavailable until an app calls the App Tracking Transparency framework to present the app-tracking authorization request to the end user. 
    To display the App Tracking Transparency authorization request for accessing the IDFA, update your tiapp.xml to add the NSUserTrackingUsageDescription key with a custom message describing your usage.
    Below is an example description text:

      <key>NSUserTrackingUsageDescription</key>
      <string>This identifier will be used to deliver personalized ads to you.</string>

    To present the authorization request, call requestTrackingAuthorization:. We recommend waiting for the completion callback prior to loading ads, so that if the user grants the App Tracking Transparency permission, the Google AdMob SDK can use the IDFA in ad requests.
    For more information about the possible status values, see TRACKING_AUTHORIZATION_STATUS_*.
    If an app does not present this request, the IDFA will automatically be zeroed out which may lead to a significant loss in ad revenue.    

    The Google AdMob SDK supports conversion tracking using Apple's SKAdNetwork, which means Google is able to attribute an app install even when IDFA is unavailable.
    To enable this functionality, you will need to update the SKAdNetworkItems key with an additional dictionary in your tiapp.xml
    
    <key>SKAdNetworkItems</key>
      <array>
        <dict>
          <key>SKAdNetworkIdentifier</key>
          <string>cstr6suwn9.skadnetwork</string>
        </dict>
     </array>

    If you use Facebook Audience Network mediation, starting with iOS 14, you will need to implement the setAdvertiserTrackingEnabled flag.
    This allows you to inform Facebook whether to use the data to deliver personalized ads. If the flag is set to false, Facebook will not be able to deliver personalized ads.
    You need to set this flag before initializing the mediation SDK in order to receive it in the bidding request.


platforms: [android, iphone, ipad]
properties:
  - name: CONSENT_STATUS_UNKNOWN
    type: Number
    summary: Returned by `consentStatus` if the consent status is unknown.
    permission: read-only
    value: 0

  - name: CONSENT_STATUS_NON_PERSONALIZED
    type: Number
    summary: Returned by `consentStatus` if the consent status is not personalized.
    permission: read-only
    value: 1

  - name: CONSENT_STATUS_PERSONALIZED
    type: Number
    summary: Returned by `consentStatus` if the consent status is personalized.
    permission: read-only
    value: 2

  - name: DEBUG_GEOGRAPHY_DISABLED
    type: Number
    summary: Returned by `debugGeography` if geography debugging is disabled.
    permission: read-only
    value: 0

  - name: DEBUG_GEOGRAPHY_EEA
    type: Number
    summary: Returned by `debugGeography` if geography appears as in EEA for debug devices.
    permission: read-only
    value: 1

  - name: DEBUG_GEOGRAPHY_NOT_EEA
    type: Number
    summary: Returned by `debugGeography` if geography appears as not in EEA for debug devices.
    permission: read-only
    value: 3 # FIXME: 2 on iOS, 3 on Android

  - name: TRACKING_AUTHORIZATION_STATUS_NOT_DETERMINED
    type: Number
    summary: Returned by `trackingAuthorizationStatus` Before a device receives an authorization request to approve access to app-related data that can be used for tracking the user or the device.
    permission: read-only
    value: 0
    platforms: [iphone,ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}

  - name: TRACKING_AUTHORIZATION_STATUS_RESTRICTED
    type: Number
    summary: Returned by `trackingAuthorizationStatus` If authorization to use app tracking data is restricted
    permission: read-only
    value: 1
    platforms: [iphone,ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}
    
  - name: TRACKING_AUTHORIZATION_STATUS_DENIED
    type: Number
    summary: Returned by `trackingAuthorizationStatus` if After a device receives an authorization request to approve access, user denied the request
    permission: read-only
    value: 2
    platforms: [iphone,ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}

  - name: TRACKING_AUTHORIZATION_STATUS_AUTHORIZED
    type: Number
    summary: Returned by `trackingAuthorizationStatus` if After a device receives an authorization request to approve access, user accpet the request
    permission: read-only
    value: 3
    platforms: [iphone,ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}

  - name: SIMULATOR_ID
    type: String
    summary: The deviceId for emulators to be used with <Modules.Admob.View.testDevices> property
    permission: read-only
    platforms: [android, iphone, ipad]

  # FIXME: GENDER constants are deprecated! (and removed on Android!)
  - name: GENDER_UNKNOWN
    type: Number
    summary: return value for `debugGeography` property
    permission: read-only
    value: 0
    platforms: [iphone, ipad]

  - name: GENDER_MALE
    type: Number
    summary: return value for `debugGeography` property
    permission: read-only
    value: 1
    platforms: [iphone, ipad]

  - name: GENDER_FEMALE
    type: Number
    summary: return value for `debugGeography` property
    permission: read-only
    value: 2
    platforms: [iphone, ipad]

  - name: AD_TYPE_BANNER
    type: Number
    summary: Used when creating a <Modules.Admob.View> to determine ad type of banner
    permission: read-only
    platforms: [iphone, ipad]

  - name: AD_TYPE_INTERSTITIAL
    type: Number
    summary: Used when creating a <Modules.Admob.View> to determine ad type of interstitial
    permission: read-only
    platforms: [iphone, ipad]

  - name: AD_SIZE_BANNER
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 0

  - name: AD_SIZE_FLUID
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 1

  - name: AD_SIZE_FULL_BANNER
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 2

  - name: AD_SIZE_LARGE_BANNER
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 3

  - name: AD_SIZE_LEADERBOARD
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 4

  - name: AD_SIZE_MEDIUM_RECTANGLE
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 5

  - name: AD_SIZE_SEARCH
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 6

  - name: AD_SIZE_SMART_BANNER
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 7

  - name: AD_SIZE_WIDE_SKYSCRAPER
    type: Number
    summary: USed with `adSize` property on Android
    permission: read-only
    platforms: [android]
    value: 8

  - name: consentStatus
    type: Number
    summary: Current constent status
    permission: read-only
    constants: Modules.Admob.CONSENT_*

  - name: adProviders
    type: Array<AddProvider>
    summary: Array of ad providers.

  - name: debugIdentifiers
    type: Array<String>
    summary: Array of advertising identifier UUID strings. Debug features are enabled for devices with these identifiers. Debug features are always enabled for simulators.

  - name: debugGeography
    type: Number
    summary: Debug geography. Used for debug devices only.
    constants: Modules.Admob.DEBUG_GEOGRAPHY_*
    #permission: read-only
    # FIXME: debugGeography is read-only on iOS, but readwrite on Android!

# TODO: Android has property for isTaggedForUnderAgeOfConsent
  
  - name: trackingAuthorizationStatus
    type: Number
    platforms: [iphone, ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}
    summary: Use to check tracking authorization status.
    constants: Modules.Admob.TRACKING_AUTHORIZATION_STATUS_*

methods:
  - name: initialize
    returns:
      type: void
    summary: You need to initialize the Admob SDK by passing your AdmobAppID as a parameter to this method.
    parameters:
      - name: admobApplicationID
        type: String
        summary: Your AdMob app id
    platforms: [android]

  - name: isGooglePlayServicesAvailable
    returns:
      type: Number
    summary: Returns a number value indicating the availability of Google Play Services which are for push notifications.
    platforms: [android]
    deprecated:
      since: "4.0.0"
      notes: Use the equivalent method from ti.playservices module

  # TODO: There is a setTesting method on Android which is basically unused and should be removed
  # TODO: There is a setPublisherId method on Android which is basically unused and should be removed

  - name: isLimitAdTrackingEnabled
    returns:
      type: void
    summary: |
        Checks whether the user has opted out from ad tracking in the device's settings. Since
        this works in a background thread in native Android a callback is called when the value
        is fetched. The callback parameter is a key/value pair with key `isLimitAdTrackingEnabled`
        and a boolean value for the user's setting.
    platforms: [android]
    parameters:
      - name: callback
        type: Callback<LimitAdTrackingObject>
        summary: async callback called when retrieved

  - name: getAndroidAdId
    returns:
      type: void
    summary: |
        Gets the user Android Advertising ID. Since this works in a background thread in native
        Android a callback is called when the value is fetched. The callback parameter is a key/value
        pair with key `androidAdId` and a String value with the id.
    platforms: [android]
    parameters:
      - name: callback
        type: Callback<AndroidAdIdObject>
        summary: async callback called when retrieved

  - name: requestConsentInfoUpdateForPublisherIdentifiers
    returns:
      type: void
    summary: |
        Requests consent information update for the provided publisher identifiers. All publisher
        identifiers used in the application should be specified in this call. Consent status is reset to
        unknown when the ad provider list changes.
    platforms: [android]
    parameters:
      - name: options
        type: RequestConsentInfoOptions
        summary: options used to request consent for given publishers
        
  - name: resetConsent
    returns:
      type: void
    summary: Resets consent information to default state and clears ad providers.

  - name: disableSDKCrashReporting
    returns:
      type: void
    summary: Disables automated SDK crash reporting. 
    description: |
        If not called, the SDK records the original exception
        handler if available and registers a new exception handler. The new exception handler only
        reports SDK related exceptions and calls the recorded original exception handler.
    
  - name: disableAutomatedInAppPurchaseReporting
    returns:
      type: void
    summary: Disables automated in app purchase (IAP) reporting. Must be called before any IAP transaction is initiated. IAP reporting is used to track IAP ad conversions. Do not disable reporting if you use IAP ads.

  - name: setTagForUnderAgeOfConsent
    returns:
      type: void
    summary: Sets whether the user is tagged for under age of consent.
    parameters:
      - name: tag
        type: Boolean
        summary: whether the user is tagged for under age of consent.

  - name: isTaggedForUnderAgeOfConsent
    returns:
      type: Boolean
    summary: Indicates whether the user is tagged for under age of consent.

  - name: showConsentForm
    returns:
      type: void
    summary: Shows a consent modal form.
    parameters:
      - name: options
        type: ConsentFormOptions
        summary: Options used to build the consent form

  - name: requestTrackingAuthorization
    summary: The request for user authorization to access app-related data.
    description: |
            One-time request to authorize or deny access to app-elated data that can be used for tracking the user or the device.
            The system remembers the user's choice and doesn't prompt again unless a user uninstalls and then reinstalls the app on the device.
            Note, when calling requestTrackingAuthorization(completionHandler:), the NSUserTrackingUsageDescription key must be in the tiapp.xml.
    platforms: [iphone, ipad]
    since: "2.6.0"
    osver: {ios: {min: "14.0"}}
    parameters:
      - name: callback
        type: Callback<TrackingAuthorizationStatusObject>
        summary: Async callback function to invoke when done
        optional: false

  - name: setAdvertiserTrackingEnabled
    returns:
      type: void
    summary: Sets whether to use the data to deliver personalized ads on Facebook Audience Network mediation.
    description: |
            If you use Facebook Audience Network mediation, starting with iOS 14, you will need to implement the setAdvertiserTrackingEnabled flag.
            This allows you to inform Facebook whether to use the data to deliver personalized ads. If the flag is set to false, Facebook will not 
            be able to deliver personalized ads.
    platforms: [iphone, ipad]
    since: "3.1.0"
    osver: {ios: {min: "14.0"}}
    parameters:
      - name: tag
        type: Boolean
        summary: Sets whether to use the data to deliver personalized ads on Facebook Audience Network mediation.

---
name: ConsentFormOptions
summary: Simple object type used in <Modules.Admob.showConsentForm>
platforms: [android, iphone, ipad]
properties:
  - name: shouldOfferPersonalizedAds
    type: Boolean
    summary: Indicates whether the consent form should show a personalized ad option.
    default: true
    optional: true

  - name: shouldOfferNonPersonalizedAds
    type: Boolean
    summary: Indicates whether the consent form should show a non-personalized ad option.
    default: true
    optional: true

  - name: shouldOfferAdFree
    type: Boolean
    summary: Indicates whether the consent form should show an ad-free app option.
    default: false
    optional: true

  - name: callback
    type: Callback<ConsentFormCallbackObject>
    summary: Callback to be triggered once the form completes.
    default: false
    optional: false

  - name: privacyURL
    type: String
    summary: Privacy URL (required)
    optional: false

---
name: ConsentFormCallbackObject
summary: Simple object passed to the callback used in <Modules.Admob.showConsentForm>
platforms: [android, iphone, ipad]
properties:
  - name: userPrefersAdFree
    type: Boolean
    summary: Indicates whether the uer prefers ad-free
    optional: true

  - name: consentStatus
    type: Number
    summary: consent status
    optional: true
    platforms: [android]

  - name: error
    type: String
    summary: the error message if the constent form is closed or fails
    optional: false

---
name: AddProvider
summary: Simple object returned in Array from <Modules.Admob.adProviders>
properties:
  - name: identifier
    type: String
    summary: identifier of the ad provider

  - name: name
    type: String
    summary: display name of the add provider

  - name: privacyPolicyURL
    type: String
    summary: URL of the add provider's privacy policy

---
name: LimitAdTrackingObject
summary: simple object passed to the <Modules.Admob.isLimitAdTrackingEnabled> callback function
platforms: [android]
properties:
  - name: isLimitAdTrackingEnabled
    type: Boolean
    summary: whether the user has opted out from ad tracking in the device's settings
    optional: false

---
name: AndroidAdIdObject
summary: simple object passed to the <Modules.Admob.getAndroidAdId> callback function
platforms: [android]
properties:
  - name: androidAdId
    type: String
    summary: the user Android Advertising ID
    optional: false

---
name: RequestConsentInfoOptions
summary: simple object passed to the <Modules.Admob.requestConsentInfoUpdateForPublisherIdentifiers> method
platforms: [android]
properties:
  - name: publisherIdentifiers
    type: Array<String>
    summary: The publisher identifiers whose consent info we're requesting
    optional: false

  - name: callback
    type: Callback<ConsentStatusObject>
    summary: async callback function to invoke when done
    optional: false

---
name: ConsentStatusObject
summary: simple object passed to callback passed in to the <Modules.Admob.requestConsentInfoUpdateForPublisherIdentifiers> method
platforms: [android]
properties:
  - name: consentStatus
    type: Number
    summary: The consent status for the given publishers
    optional: true
    permission: read-only

  - name: error
    type: String
    summary: The error message in case of failure
    optional: true
    permission: read-only

---
name: TrackingAuthorizationStatusObject
summary: Simple object passed to callback passed in to the <Modules.Admob.requestTrackingAuthorization> method
platforms: [iphone,ipad]
since: "2.6.0"
osver: {ios: {min: "14.0"}}
properties:
  - name: status
    type: Number
    summary: The status of Tracking Authorization
    optional: false
    permission: read-only
    constants: Modules.Admob.TRACKING_AUTHORIZATION_STATUS_*
    